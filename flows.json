[
    {
        "id": "537eb81ac592d6ae",
        "type": "tab",
        "label": "Main Flow",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f075697e81a4e38d",
        "type": "subflow",
        "name": "MIHO005 Plug Monitor and Control",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 120,
                "wires": [
                    {
                        "id": "9b3f97706e416b89"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 940,
                "y": 200,
                "wires": [
                    {
                        "id": "e69c1c8256f84f5b",
                        "port": 0
                    },
                    {
                        "id": "e69c1c8256f84f5b",
                        "port": 1
                    },
                    {
                        "id": "e69c1c8256f84f5b",
                        "port": 2
                    },
                    {
                        "id": "e69c1c8256f84f5b",
                        "port": 3
                    },
                    {
                        "id": "e69c1c8256f84f5b",
                        "port": 4
                    },
                    {
                        "id": "e69c1c8256f84f5b",
                        "port": 5
                    },
                    {
                        "id": "9e25bcb4c2703785",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "833a40a2676dab42",
        "type": "subflow",
        "name": "MIHO004 Plug Monitor Only",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 180,
                "wires": [
                    {
                        "id": "3f74de5531bb36c1"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 880,
                "y": 180,
                "wires": [
                    {
                        "id": "bd35507599327640",
                        "port": 0
                    },
                    {
                        "id": "bd35507599327640",
                        "port": 1
                    },
                    {
                        "id": "bd35507599327640",
                        "port": 2
                    },
                    {
                        "id": "bd35507599327640",
                        "port": 3
                    },
                    {
                        "id": "60740ddd1ac044ac",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "cdb62d5ce7ac8e79",
        "type": "subflow",
        "name": "MIHO013 Radiator Valve",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 120,
                "wires": [
                    {
                        "id": "1b26d96dfd7c0a9d"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 900,
                "y": 260,
                "wires": [
                    {
                        "id": "a5c081218aa0a38b",
                        "port": 1
                    },
                    {
                        "id": "a5c081218aa0a38b",
                        "port": 0
                    },
                    {
                        "id": "a5c081218aa0a38b",
                        "port": 2
                    },
                    {
                        "id": "a5c081218aa0a38b",
                        "port": 3
                    },
                    {
                        "id": "a5c081218aa0a38b",
                        "port": 4
                    },
                    {
                        "id": "a5c081218aa0a38b",
                        "port": 5
                    },
                    {
                        "id": "a5c081218aa0a38b",
                        "port": 6
                    },
                    {
                        "id": "a5c081218aa0a38b",
                        "port": 7
                    },
                    {
                        "id": "a5c081218aa0a38b",
                        "port": 8
                    },
                    {
                        "id": "a5c081218aa0a38b",
                        "port": 9
                    },
                    {
                        "id": "a5c081218aa0a38b",
                        "port": 10
                    },
                    {
                        "id": "a5c081218aa0a38b",
                        "port": 11
                    },
                    {
                        "id": "a5c081218aa0a38b",
                        "port": 12
                    },
                    {
                        "id": "a5c081218aa0a38b",
                        "port": 13
                    },
                    {
                        "id": "a5c081218aa0a38b",
                        "port": 15
                    },
                    {
                        "id": "a5c081218aa0a38b",
                        "port": 14
                    },
                    {
                        "id": "8aa18cb79c3162bc",
                        "port": 0
                    },
                    {
                        "id": "a5c081218aa0a38b",
                        "port": 16
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "616d9522544dbdb6",
        "type": "group",
        "z": "537eb81ac592d6ae",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "e3cf621895e62eef",
            "e0b4a5ede84fec43",
            "aa286eb049368e95",
            "eb64c277ce27959b",
            "3ba2b2ec9a663b9e"
        ],
        "x": 34,
        "y": 59,
        "w": 412,
        "h": 162
    },
    {
        "id": "5112edb8c4151763",
        "type": "group",
        "z": "537eb81ac592d6ae",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4d961fde847699bb",
            "0282228cd430609b",
            "497782fb8bf28a5e"
        ],
        "x": 34,
        "y": 239,
        "w": 2178,
        "h": 334
    },
    {
        "id": "57c9286e0d5bee84",
        "type": "group",
        "z": "537eb81ac592d6ae",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [],
        "x": 0,
        "y": 0,
        "w": 40,
        "h": 40
    },
    {
        "id": "985b0c2fa5b8e0c7",
        "type": "group",
        "z": "537eb81ac592d6ae",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [],
        "x": 0,
        "y": 0,
        "w": 40,
        "h": 40
    },
    {
        "id": "ea176ac851386d6e",
        "type": "group",
        "z": "537eb81ac592d6ae",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "6766125a6911b82f",
            "53a09c1b2e26371d",
            "8fa61f20ae12509e",
            "b7595623148c9478",
            "536976be74a81a6f"
        ],
        "x": 34,
        "y": 639,
        "w": 2238,
        "h": 614
    },
    {
        "id": "a5de3889fbc07d90",
        "type": "group",
        "z": "537eb81ac592d6ae",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "db52f7a86ff3fedd",
            "f6c3b6f8fa2dd920",
            "80cedc3bf9e60653",
            "c46934dffc3bcb2d",
            "db083b5f26996a4c",
            "dad03b1c53fcc63b",
            "4398775347ed8679",
            "9978c67901c1a989",
            "bf87fe53c72c7d7e",
            "d989ab87daa5443f",
            "e0f4df05ab1bef7e",
            "1f14589732fae5c6",
            "3b7b181075c1ef3b",
            "609e085f01975b46",
            "c5a79ac44753842f",
            "6e774504ac1563d2",
            "f0d71363803e24f8",
            "edea18ceaf6e05c2",
            "89732ff349aee7b8"
        ],
        "x": 94,
        "y": 2739,
        "w": 1552,
        "h": 442
    },
    {
        "id": "2e76e37671a934e0",
        "type": "group",
        "z": "537eb81ac592d6ae",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "26a4d478f240fd15",
            "4b2487e2e7cfa0a2",
            "99f6dd3e81add433",
            "5c343eb4cc9668f0",
            "b43999f1833a7f6c",
            "fa73fab3d77d8daa",
            "018e61fa1f56ee1e",
            "045aef6db868e9d5",
            "0dc7ef642e108ea2",
            "4c7c516e623f61fe",
            "b866644ff66cac75",
            "11520a859a0fedeb"
        ],
        "x": 34,
        "y": 1299,
        "w": 2278,
        "h": 1208
    },
    {
        "id": "b43999f1833a7f6c",
        "type": "group",
        "z": "537eb81ac592d6ae",
        "g": "2e76e37671a934e0",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "255f879cc51130b6",
            "3a38af998a677577",
            "cf0cef5a7e10d03b",
            "99369410a3413987",
            "5afbdef9f808b931"
        ],
        "x": 894,
        "y": 2059,
        "w": 492,
        "h": 202
    },
    {
        "id": "fa73fab3d77d8daa",
        "type": "group",
        "z": "537eb81ac592d6ae",
        "g": "2e76e37671a934e0",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a380876d88962b29",
            "7d792a741cd70d6c",
            "43b3bf1c0f3c6a18",
            "c533a8bb7273e019",
            "39e666ee8d7e9ca7",
            "cc454d1be9e24b72",
            "7f6f8e312914436c",
            "16340f7714e67b65"
        ],
        "x": 74,
        "y": 1379,
        "w": 712,
        "h": 284.5
    },
    {
        "id": "018e61fa1f56ee1e",
        "type": "group",
        "z": "537eb81ac592d6ae",
        "g": "2e76e37671a934e0",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "0e63b171b14873f1",
            "18636c74da0dfe6e",
            "7d800d7548111c58",
            "241e684d32ce5b64"
        ],
        "x": 1594,
        "y": 1339,
        "w": 692,
        "h": 122
    },
    {
        "id": "045aef6db868e9d5",
        "type": "group",
        "z": "537eb81ac592d6ae",
        "g": "2e76e37671a934e0",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "29a81328d008fb5e",
            "11343262e93d1cf7",
            "01a73f4f44b838f8",
            "c4e7618d0c8de6d4",
            "9aa0bd5c8e0df7d8",
            "bbd9c96a9241fa71",
            "c44615c857eeef7d",
            "f10e0c7ad4c4a76e",
            "4d3ec33dddf3365a",
            "c0ea2d7fca78a8d4",
            "180ee6c43e1db209",
            "f4c005a8c68ef5b1",
            "943e1064f510b2a4",
            "f29f7f8628a8fa6e",
            "c9e8d0cc68ce9bf2",
            "09303e100d6c84bb",
            "22f516cfc8a864eb"
        ],
        "x": 1674,
        "y": 1559,
        "w": 552,
        "h": 762
    },
    {
        "id": "0dc7ef642e108ea2",
        "type": "group",
        "z": "537eb81ac592d6ae",
        "g": "2e76e37671a934e0",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f97e4fd104d66acc",
            "f155d23535a2e226",
            "743f673c2f069661",
            "5bd487d809b900e4",
            "06437078cd06684c",
            "787bc97aae81112e"
        ],
        "x": 894,
        "y": 1459,
        "w": 472,
        "h": 202
    },
    {
        "id": "4c7c516e623f61fe",
        "type": "group",
        "z": "537eb81ac592d6ae",
        "g": "2e76e37671a934e0",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "45f505abf6949496",
            "af2647e2212948a2",
            "d12d0a2c61623d10",
            "304a47a02d63c225",
            "9f72ca99c409ecf7"
        ],
        "x": 894,
        "y": 1659,
        "w": 472,
        "h": 182
    },
    {
        "id": "b866644ff66cac75",
        "type": "group",
        "z": "537eb81ac592d6ae",
        "g": "2e76e37671a934e0",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "dda63ccf41a87347",
            "0e30c1199ff35990",
            "4d842b8a2d4605ef",
            "1d83c83e1aefc0e2",
            "5b273f4574e1e063"
        ],
        "x": 894,
        "y": 2279,
        "w": 492,
        "h": 202
    },
    {
        "id": "11520a859a0fedeb",
        "type": "group",
        "z": "537eb81ac592d6ae",
        "g": "2e76e37671a934e0",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "04f1e09fc050dd94",
            "5d2f69626b6683da",
            "50613d7a774d7f3e",
            "ad6c980ebe98dd3c",
            "fcfee4cd7f41bc55"
        ],
        "x": 894,
        "y": 1859,
        "w": 492,
        "h": 182
    },
    {
        "id": "8fa61f20ae12509e",
        "type": "group",
        "z": "537eb81ac592d6ae",
        "g": "ea176ac851386d6e",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "7d073ecada5747d4",
            "048759ea643eacfb",
            "5ed8cbfcd963922f"
        ],
        "x": 1654,
        "y": 699,
        "w": 592,
        "h": 122
    },
    {
        "id": "0282228cd430609b",
        "type": "group",
        "z": "537eb81ac592d6ae",
        "g": "5112edb8c4151763",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "9965ef4959ba011f",
            "9268589db08f7ec3",
            "5afc17fcd76d53d5"
        ],
        "x": 1634,
        "y": 299,
        "w": 552,
        "h": 122
    },
    {
        "id": "b7595623148c9478",
        "type": "group",
        "z": "537eb81ac592d6ae",
        "g": "ea176ac851386d6e",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "aff329637c1b5419",
            "f9b9be4b9e1cf0bc"
        ],
        "x": 74,
        "y": 719,
        "w": 712,
        "h": 82
    },
    {
        "id": "536976be74a81a6f",
        "type": "group",
        "z": "537eb81ac592d6ae",
        "g": "ea176ac851386d6e",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "27552c1876ecace0",
            "9c574dedaae3266e",
            "466213e5a7838e65",
            "bd6bb52ed4b9535c"
        ],
        "x": 828,
        "y": 699,
        "w": 764,
        "h": 528
    },
    {
        "id": "497782fb8bf28a5e",
        "type": "group",
        "z": "537eb81ac592d6ae",
        "g": "5112edb8c4151763",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "66a0ca5aeaaee7fd",
            "f8842ccda840ba94"
        ],
        "x": 828,
        "y": 299,
        "w": 744,
        "h": 248
    },
    {
        "id": "466213e5a7838e65",
        "type": "group",
        "z": "537eb81ac592d6ae",
        "g": "536976be74a81a6f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "295d1acbb4387108",
            "25d4079da5b20a32",
            "897d41aed130b0e7",
            "e9115c9a4480a356",
            "dcc750a105f878b9",
            "d67372c17b6b91ee",
            "f4fedc380d1a6661"
        ],
        "x": 854,
        "y": 1019,
        "w": 712,
        "h": 182
    },
    {
        "id": "f8842ccda840ba94",
        "type": "group",
        "z": "537eb81ac592d6ae",
        "g": "497782fb8bf28a5e",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "3342db22e8247c46",
            "a26075197f86515e",
            "3d449a6477c1b641",
            "37b551c687aeb197"
        ],
        "x": 854,
        "y": 359,
        "w": 692,
        "h": 162
    },
    {
        "id": "bd6bb52ed4b9535c",
        "type": "group",
        "z": "537eb81ac592d6ae",
        "g": "536976be74a81a6f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "28824b357224a926",
            "37f62acf217785cd",
            "dadbe76ae213adcc",
            "3c57205d2a77b4a0",
            "09747f10f9a9bea7",
            "1e380b75b8d61790",
            "301bb66f90af5066"
        ],
        "x": 854,
        "y": 819,
        "w": 712,
        "h": 182
    },
    {
        "id": "7d800d7548111c58",
        "type": "junction",
        "z": "537eb81ac592d6ae",
        "g": "018e61fa1f56ee1e",
        "x": 1960,
        "y": 1420,
        "wires": [
            [
                "0e63b171b14873f1"
            ]
        ]
    },
    {
        "id": "f97e4fd104d66acc",
        "type": "junction",
        "z": "537eb81ac592d6ae",
        "g": "0dc7ef642e108ea2",
        "x": 1160,
        "y": 1580,
        "wires": [
            [
                "18636c74da0dfe6e"
            ]
        ]
    },
    {
        "id": "301bb66f90af5066",
        "type": "junction",
        "z": "537eb81ac592d6ae",
        "g": "bd6bb52ed4b9535c",
        "x": 1360,
        "y": 860,
        "wires": [
            [
                "7d073ecada5747d4"
            ]
        ]
    },
    {
        "id": "d67372c17b6b91ee",
        "type": "junction",
        "z": "537eb81ac592d6ae",
        "g": "466213e5a7838e65",
        "x": 1360,
        "y": 1060,
        "wires": [
            [
                "7d073ecada5747d4"
            ]
        ]
    },
    {
        "id": "f4c005a8c68ef5b1",
        "type": "junction",
        "z": "537eb81ac592d6ae",
        "g": "045aef6db868e9d5",
        "x": 2180,
        "y": 1640,
        "wires": [
            [
                "06437078cd06684c",
                "9f72ca99c409ecf7",
                "fcfee4cd7f41bc55",
                "5afbdef9f808b931",
                "5b273f4574e1e063"
            ]
        ]
    },
    {
        "id": "45f505abf6949496",
        "type": "junction",
        "z": "537eb81ac592d6ae",
        "g": "4c7c516e623f61fe",
        "x": 1160,
        "y": 1780,
        "wires": [
            [
                "18636c74da0dfe6e"
            ]
        ]
    },
    {
        "id": "255f879cc51130b6",
        "type": "junction",
        "z": "537eb81ac592d6ae",
        "g": "b43999f1833a7f6c",
        "x": 1160,
        "y": 2180,
        "wires": [
            [
                "18636c74da0dfe6e"
            ]
        ]
    },
    {
        "id": "dda63ccf41a87347",
        "type": "junction",
        "z": "537eb81ac592d6ae",
        "g": "b866644ff66cac75",
        "x": 1160,
        "y": 2400,
        "wires": [
            [
                "18636c74da0dfe6e"
            ]
        ]
    },
    {
        "id": "04f1e09fc050dd94",
        "type": "junction",
        "z": "537eb81ac592d6ae",
        "g": "11520a859a0fedeb",
        "x": 1160,
        "y": 1980,
        "wires": [
            [
                "18636c74da0dfe6e"
            ]
        ]
    },
    {
        "id": "88fbf5a17def056c",
        "type": "energenie-board",
        "name": "ENER314-RT",
        "timeout": "5000"
    },
    {
        "id": "2c19ae9da8c2824c",
        "type": "openThings-device",
        "name": "Monitor Plug:1215",
        "productId": "1",
        "product": "Monitor Plug",
        "deviceId": "1215",
        "control": "Monitor"
    },
    {
        "id": "0f31bc6adcafaa43",
        "type": "openThings-device",
        "name": "Adapter Plus:6187",
        "productId": "2",
        "product": "Adapter Plus",
        "deviceId": "6187",
        "control": "Control & Monitor"
    },
    {
        "id": "23f31f81a5be8aed",
        "type": "openThings-device",
        "name": "Adapter Plus:5623",
        "productId": "2",
        "product": "Adapter Plus",
        "deviceId": "5623",
        "control": "Control & Monitor"
    },
    {
        "id": "cf09eae887391bc1",
        "type": "openThings-device",
        "name": "Radiator Valve:5475",
        "productId": "3",
        "product": "Radiator Valve",
        "deviceId": "5475",
        "control": "Control & Monitor (Cached)"
    },
    {
        "id": "8d7ee635c95c5781",
        "type": "mqtt-broker",
        "name": "home-assistant-mqtt",
        "broker": "192.168.10.21",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "energenie_gateway/bridge/state",
        "birthQos": "2",
        "birthRetain": "true",
        "birthPayload": "online",
        "birthMsg": {},
        "closeTopic": "energenie_gateway/bridge/state",
        "closeQos": "2",
        "closeRetain": "true",
        "closePayload": "offline",
        "closeMsg": {},
        "willTopic": "energenie_gateway/bridge/state",
        "willQos": "2",
        "willRetain": "true",
        "willPayload": "offline",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "71e70e5d03cfbecf",
        "type": "openThings-device",
        "name": "Radiator Valve:3233",
        "productId": "3",
        "product": "Radiator Valve",
        "deviceId": "3233",
        "control": "Control & Monitor (Cached)"
    },
    {
        "id": "cc25050701e608f8",
        "type": "openThings-device",
        "name": "Radiator Valve:5318",
        "productId": "3",
        "product": "Radiator Valve",
        "deviceId": "5318",
        "control": "Control & Monitor (Cached)"
    },
    {
        "id": "a438a26cd10184b3",
        "type": "openThings-device",
        "name": "Radiator Valve:3449",
        "productId": "3",
        "product": "Radiator Valve",
        "deviceId": "3449",
        "control": "Control & Monitor (Cached)"
    },
    {
        "id": "4d9cd9aa20ea4eeb",
        "type": "openThings-device",
        "name": "Radiator Valve:5251",
        "productId": "3",
        "product": "Radiator Valve",
        "deviceId": "5251",
        "control": "Control & Monitor (Cached)"
    },
    {
        "id": "e69c1c8256f84f5b",
        "type": "function",
        "z": "f075697e81a4e38d",
        "name": "Create MQTT discovery messages",
        "func": "// Rev 1. Richard Huish 2023\n// Designed for Home Assistant automatic MQTT Discovery\n// https://www.home-assistant.io/integrations/mqtt/#mqtt-discovery\n\n// Change this to match the IP of your Raspberry Pi with ENER314-RT, used in Home Assistant for proving user with hyperlink.\nvar CONFIGURATION_VAR = \"http://192.168.10.35:1880/\";\n\n\nvar MODEL_NAME = \" Smart Plug Plus (MIHO005)\";\nvar SHARED_NAME_PREFIX = \"Energenie \";\nvar IDENTIFIERS_PREFIX = \"energenie_mqtt_gateway_\";\n\nvar MANUFACTURER_NAME = \"Energenie (via MQTT Raspberry Pi with ENER314-RT)\";\nvar VIA_DEVICE_NAME = \"MQTT Raspberry Pi with ENER314-RT\"; \nvar UNIQUE_ID_SUFFIX = \"_energenie_mqtt\"; \nvar EXPIRE_AFTER = \"60\";  //Number of seconds after the sensor’s state expires\nvar STATE_TOPIC = \"energenie_gateway/energeniemqtt_\" + msg.payload.deviceId + \"/state\";\nvar SET_TOPIC = \"energenie_gateway/energeniemqtt_\" + msg.payload.deviceId + \"/set\";\n\n// Code reuse to save typing it out for each config.\nvar AVAILABILITY = [\n    {\n        topic: \"energenie_gateway/bridge/state\",\n        payload_available: \"online\",\n        payload_not_available: \"offline\"\n    }\n];\nvar DEVICE = {\n    name: msg.payload.deviceId,\n    identifiers: IDENTIFIERS_PREFIX + msg.payload.deviceId,\n    configuration_url: CONFIGURATION_VAR,\n    manufacturer: MANUFACTURER_NAME,\n    model: MODEL_NAME,\n    via_device: VIA_DEVICE_NAME\n};\n\n\n// Measured power sensor in watts.\nvar config1 = {\n    payload: {\n        // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n        availability: AVAILABILITY,\n        device: DEVICE,\n        // enabled_by_default: true,\n        // entity_category: \"none\",\n        expire_after: EXPIRE_AFTER,\n        name: msg.payload.deviceId + \" Power\",\n        unique_id: msg.payload.deviceId + \"/power\",\n        state_topic: STATE_TOPIC,\n        value_template: \"{{ value_json.REAL_POWER }}\",\n        unit_of_measurement: \"W\",\n        device_class: \"power\",\n        state_class: \"measurement\"\n        // icon: \"mdi:current-dc\"\n    },\n    topic: \"homeassistant/sensor/energeniemqtt_\" + msg.payload.deviceId + \"/power/config\"\n};\n\n// Measured voltage sensor in volts.\nvar config2 = {\n    payload: {\n        // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n        availability: AVAILABILITY,\n        device: DEVICE,\n        // enabled_by_default: true,\n        // entity_category: \"none\",\n        expire_after: EXPIRE_AFTER,\n        name: msg.payload.deviceId + \" Voltage\",\n        unique_id: msg.payload.deviceId + \"/voltage\",\n        state_topic: STATE_TOPIC,\n        value_template: \"{{ value_json.VOLTAGE }}\",\n        unit_of_measurement: \"V\",\n        device_class: \"voltage\",\n        state_class: \"measurement\"\n        // icon: \"mdi:flash\"\n    },\n    topic: \"homeassistant/sensor/energeniemqtt_\" + msg.payload.deviceId + \"/voltage/config\"\n};\n\n// Measured frequency in Hz.\nvar config3 = {\n    payload: {\n        // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n        availability: AVAILABILITY,\n        device: DEVICE,\n        // enabled_by_default: true,\n        // entity_category: \"none\",\n        expire_after: EXPIRE_AFTER,\n        name: msg.payload.deviceId + \" Frequency\",\n        unique_id: msg.payload.deviceId + \"/frequency\",\n        state_topic: STATE_TOPIC,\n        value_template: \"{{ value_json.FREQUENCY | round(2)}}\",\n        unit_of_measurement: \"Hz\",\n        device_class: \"frequency\",\n        state_class: \"measurement\"\n        // icon: \"mdi:flash\"\n    },\n    topic: \"homeassistant/sensor/energeniemqtt_\" + msg.payload.deviceId + \"/frequency/config\"\n};\n\n// Measured reactive power in VAR.\nvar config4 = {\n    payload: {\n        // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n        availability: AVAILABILITY,\n        device: DEVICE,\n        // enabled_by_default: true,\n        // entity_category: \"none\",\n        expire_after: EXPIRE_AFTER,\n        name: msg.payload.deviceId + \" Reactive Power\",\n        unique_id: msg.payload.deviceId + \"/reactive_power\",\n        state_topic: STATE_TOPIC,\n        value_template: \"{{ value_json.REACTIVE_POWER }}\",\n        unit_of_measurement: \"var\",\n        device_class: \"reactive_power\",\n        state_class: \"measurement\"\n        // icon: \"mdi:flash\"\n    },\n    topic: \"homeassistant/sensor/energeniemqtt_\" + msg.payload.deviceId + \"/reactive_power/config\"\n};\n\n// Binary Sensor for plug switch state, not technically needed, but handy for diagnostics.\nvar config5 = {\n    payload: {\n        // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n        availability: AVAILABILITY,\n        device: DEVICE,\n        // enabled_by_default: true,\n        entity_category: \"diagnostic\",\n        expire_after: EXPIRE_AFTER,\n        name: msg.payload.deviceId + \" Plug Switch State\",\n        unique_id: msg.payload.deviceId + \"/plug_switch_state_returned\",\n        state_topic: STATE_TOPIC,\n        value_template: \"{{ value_json.SWITCH_STATE }}\",\n        // unit_of_measurement: \"var\",\n        device_class: \"power\",\n        // state_class: \"measurement\",\n        // icon: \"mdi:flash\"\n        payload_on: \"1\", //payload format to match JSON from sensor\n\t    payload_off: \"0\", //payload format to match JSON from sensor\n    },\n    topic: \"homeassistant/binary_sensor/energeniemqtt_\" + msg.payload.deviceId + \"/plug_switch_state_returned/config\"\n};\n\n// Switch control for plug, with state.\n// Incoming data from MQTT is passed through a change node to change the \"false\" string to boolean formats,\n// prior to be passed to the openThings switch node.\nvar config6 = {\n    payload: {\n        // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n        availability: AVAILABILITY,\n        device: DEVICE,\n        // enabled_by_default: true,\n        // entity_category: \"none\",\n        expire_after: EXPIRE_AFTER,\n        name: msg.payload.deviceId + \" Plug Switch\",\n        unique_id: msg.payload.deviceId + \"/plug_switch_set\",\n        state_topic: STATE_TOPIC, // Track the state of the sensor value.\n        value_template: \"{{ value_json.SWITCH_STATE }}\",\n        // unit_of_measurement: \"var\",\n        device_class: \"outlet\",\n        // state_class: \"measurement\",\n        icon: \"mdi:power-socket-uk\",\n\t    payload_on: \"true\", // Values to be sent to Node-RED via MQTT\n\t    payload_off: \"false\", // Values to be sent to Node-RED via MQTT\n\t    state_on: \"1\", // Values exspected be sent from Node-RED via MQTT (payload format to match JSON from sensor)\n\t    state_off: \"0\", // Values exspected be sent from Node-RED via MQTT (payload format to match JSON from sensor)\n        command_topic: SET_TOPIC, // Commands topic to be actioned on by Node-RED\n    },\n    topic: \"homeassistant/switch/energeniemqtt_\" + msg.payload.deviceId + \"/plug_switch_set/config\"\n};\n\n// Return all the data.\nreturn [config1, config2, config3, config4, config5, config6];",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 120,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "9e25bcb4c2703785",
        "type": "function",
        "z": "f075697e81a4e38d",
        "name": "Publish to all",
        "func": "msg.topic = \"energenie_gateway/energeniemqtt_\" + msg.payload.deviceId + \"/state\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "7fe860ac2a5bcb1c",
        "type": "delay",
        "z": "f075697e81a4e38d",
        "name": "",
        "pauseType": "delay",
        "timeout": "600",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 310,
        "y": 200,
        "wires": [
            [
                "9e25bcb4c2703785"
            ]
        ]
    },
    {
        "id": "9b3f97706e416b89",
        "type": "delay",
        "z": "f075697e81a4e38d",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 310,
        "y": 120,
        "wires": [
            [
                "e69c1c8256f84f5b",
                "7fe860ac2a5bcb1c"
            ]
        ]
    },
    {
        "id": "bd35507599327640",
        "type": "function",
        "z": "833a40a2676dab42",
        "name": "Create MQTT discovery messages",
        "func": "// Rev 1. Richard Huish 2023\n// Designed for Home Assistant automatic MQTT Discovery\n// https://www.home-assistant.io/integrations/mqtt/#mqtt-discovery\n\n// Change this to match the IP of your Raspberry Pi with ENER314-RT, used in Home Assistant for proving user with hyperlink.\nvar CONFIGURATION_VAR = \"http://192.168.10.35:1880/\";\n\nvar MODEL_NAME = \"Smart Monitor Plug (MIHO004)\";\nvar SHARED_NAME_PREFIX = \"Energenie \";\n// var IDENTIFIER_NAME_PREFIX = \"Energenie MQTT Gateway\";\nvar IDENTIFIERS_PREFIX = \"energenie_mqtt_gateway_\";\n\n\nvar MANUFACTURER_NAME = \"Energenie (via MQTT Raspberry Pi with ENER314-RT)\";\nvar VIA_DEVICE_NAME = \"MQTT Raspberry Pi with ENER314-RT\"; \nvar UNIQUE_ID_SUFFIX = \"_energenie_mqtt\"; \nvar EXPIRE_AFTER = \"60\";\nvar STATE_TOPIC = \"energenie_gateway/energeniemqtt_\" + msg.payload.deviceId + \"/state\";\n\n\n// Code reuse to save typing it out for each config.\nvar AVAILABILITY = [\n    {\n        topic: \"energenie_gateway/bridge/state\",\n        payload_available: \"online\",\n        payload_not_available: \"offline\"\n    }\n];\nvar DEVICE = {\n    name: msg.payload.deviceId,\n    identifiers: IDENTIFIERS_PREFIX + msg.payload.deviceId,\n    configuration_url: CONFIGURATION_VAR,\n    manufacturer: MANUFACTURER_NAME,\n    model: MODEL_NAME,\n    via_device: VIA_DEVICE_NAME\n};\n\n// Measured power sensor in watts.\nvar config1 = {\n    payload: {\n        // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n        availability: AVAILABILITY,\n        device: DEVICE,\n        // enabled_by_default: true,\n        // entity_category: \"none\",\n        expire_after: EXPIRE_AFTER,\n        name: msg.payload.deviceId + \" Power\",\n        unique_id: msg.payload.deviceId + \"_power\",\n        state_topic: STATE_TOPIC,\n        value_template: \"{{ value_json.REAL_POWER }}\",\n        unit_of_measurement: \"W\",\n        device_class: \"power\",\n        state_class: \"measurement\"\n        // icon: \"mdi:flash\"\n    },\n    topic: \"homeassistant/sensor/energeniemqtt_\" + msg.payload.deviceId + \"/power/config\"\n};\n\n// Measured voltage sensor in volts.\nvar config2 = {\n    payload: {\n        // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n        availability: AVAILABILITY,\n        device: DEVICE,\n        // enabled_by_default: true,\n        // entity_category: \"none\",\n        expire_after: EXPIRE_AFTER,\n        name: msg.payload.deviceId + \" Voltage\",\n        unique_id: msg.payload.deviceId + \"_voltage\",\n        state_topic: STATE_TOPIC,\n        value_template: \"{{ value_json.VOLTAGE }}\",\n        unit_of_measurement: \"V\",\n        device_class: \"voltage\",\n        state_class: \"measurement\"\n        // icon: \"mdi:flash\"\n    },\n    topic: \"homeassistant/sensor/energeniemqtt_\" + msg.payload.deviceId + \"/voltage/config\"\n};\n\n// Measured frequency in Hz.\nvar config3 = {\n    payload: {\n        // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n        availability: AVAILABILITY,\n        device: DEVICE,\n        // enabled_by_default: true,\n        // entity_category: \"none\",\n        expire_after: EXPIRE_AFTER,\n        name: msg.payload.deviceId + \" Frequency\",\n        unique_id: msg.payload.deviceId + \"_frequency\",\n        state_topic: STATE_TOPIC,\n        value_template: \"{{ value_json.FREQUENCY | round(2) }}\",\n        unit_of_measurement: \"Hz\",\n        device_class: \"frequency\",\n        state_class: \"measurement\"\n        // icon: \"mdi:flash\"\n    },\n    topic: \"homeassistant/sensor/energeniemqtt_\" + msg.payload.deviceId + \"/frequency/config\"\n};\n\n// Measured reactive power in VAR.\nvar config4 = {\n    payload: {\n        // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n        availability: AVAILABILITY,\n        device: DEVICE,\n        // enabled_by_default: true,\n        // entity_category: \"none\",\n        expire_after: EXPIRE_AFTER,\n        name: msg.payload.deviceId + \" Reactive Power\",\n        unique_id: msg.payload.deviceId + \"_reactive_power\",\n        state_topic: STATE_TOPIC,\n        value_template: \"{{ value_json.REACTIVE_POWER }}\",\n        unit_of_measurement: \"var\",\n        device_class: \"reactive_power\",\n        state_class: \"measurement\"\n        // icon: \"mdi:flash\"\n    },\n    topic: \"homeassistant/sensor/energeniemqtt_\" + msg.payload.deviceId + \"/reactive_power/config\"\n};\n\n// Return all the data.\nreturn [config1, config2, config3, config4];",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 180,
        "wires": [
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "60740ddd1ac044ac",
        "type": "function",
        "z": "833a40a2676dab42",
        "name": "Publish to all",
        "func": "msg.topic = \"energenie_gateway/energeniemqtt_\" + msg.payload.deviceId + \"/state\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "e522e5aa96382318",
        "type": "delay",
        "z": "833a40a2676dab42",
        "name": "",
        "pauseType": "delay",
        "timeout": "600",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 330,
        "y": 260,
        "wires": [
            [
                "60740ddd1ac044ac"
            ]
        ]
    },
    {
        "id": "3f74de5531bb36c1",
        "type": "delay",
        "z": "833a40a2676dab42",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 330,
        "y": 180,
        "wires": [
            [
                "bd35507599327640",
                "e522e5aa96382318"
            ]
        ]
    },
    {
        "id": "a5c081218aa0a38b",
        "type": "function",
        "z": "cdb62d5ce7ac8e79",
        "name": "Create MQTT discovery messages",
        "func": "// Rev 1. Richard Huish 2023\n// Designed for Home Assistant automatic MQTT Discovery\n// https://www.home-assistant.io/integrations/mqtt/#mqtt-discovery\n\n// Change this to match the IP of your Raspberry Pi with ENER314-RT, used in Home Assistant for proving user with hyperlink.\nvar CONFIGURATION_VAR = \"http://192.168.10.35:1880/\";\n\nvar MODEL_NAME = \"eTRV (MIHO013)\";\nvar SHARED_NAME_PREFIX = \"Energenie \";\n// var IDENTIFIER_NAME_PREFIX = \"Energenie MQTT Gateway\";\nvar IDENTIFIERS_PREFIX = \"energenie_mqtt_gateway_\";\n\n\nvar MANUFACTURER_NAME = \"Energenie (via MQTT Raspberry Pi with ENER314-RT)\";\nvar VIA_DEVICE_NAME = \"MQTT Raspberry Pi with ENER314-RT\";\nvar UNIQUE_ID_SUFFIX = \"_energenie_mqtt\";\nvar EXPIRE_AFTER = \"400\"; // eTRV reports its temperature at the SET_REPORTING_INTERVAL (default 5 minutes)\nvar STATE_TOPIC = \"energenie_gateway/energeniemqtt_\" + msg.payload.deviceId + \"/state\";\n\n// Code reuse to save typing it out for each config.\nvar AVAILABILITY = [\n    {\n        topic: \"energenie_gateway/bridge/state\",\n        payload_available: \"online\",\n        payload_not_available: \"offline\"\n    }\n];\nvar DEVICE = {\n    name: msg.payload.deviceId,\n    identifiers: IDENTIFIERS_PREFIX + msg.payload.deviceId,\n    configuration_url: CONFIGURATION_VAR,\n    manufacturer: MANUFACTURER_NAME,\n    model: MODEL_NAME,\n    via_device: VIA_DEVICE_NAME\n};\n\n// Control and eTRV\nvar config1 = {\n    payload: {\n        // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n        availability: AVAILABILITY,\n        device: DEVICE,\n        // entity_category: \"none\",\n        expire_after: EXPIRE_AFTER,\n        name: msg.payload.deviceId + \" TRV\",\n        unique_id: msg.payload.deviceId + \"_trv\",\n        temperature_unit: \"C\",\n\n        //Limit the climate modes to just heat (no fan, cool, etc)\n        // If this would ever chnage then the forced \"heat\" mode in the pre-node would need to be removed.\n        // Could add an off mode, which closes the valve. But this is not how energenie did it on their app.\n        // modes: [\"off\",\"heat\"],\n        // modes: [\"heat\"],\n        modes: \"heat\",\n        mode_state_topic: STATE_TOPIC,\n        mode_state_template: \"{{ value_json.mode }}\", // Fake mode manually added\n\n        // The MQTT topic on which to listen for the current temperature. (int) NOTE: The VALVE_STATE must be set to 'Auto' for this to work.\n        current_temperature_topic: STATE_TOPIC,\n        current_temperature_template: \"{{ value_json.TEMPERATURE }}\",\n\n        // MQTT topic to subscribe for changes in the target temperature\n        temperature_state_topic: STATE_TOPIC,\n        temperature_state_template: \"{{ value_json.TARGET_C }}\",\n\n        // The MQTT topic to publish commands to change the target temperature.\n        temperature_command_topic: \"energenie_gateway/energeniemqtt_\" + msg.payload.deviceId + \"/command\",\n        temperature_command_template: '{ \"command\":244, \"data\":{{value}}}', // command = 244 is for setting the target temperature, so I DON'T need to edit the passed data back from MQTT\n\n        // Temp Range as per manual\n        max_temp: 30,\n        min_temp: -4\n\n    },\n    topic: \"homeassistant/climate/energeniemqtt_\" + msg.payload.deviceId + \"/trv/config\"\n};\n\nvar config2 = {\n    payload: {\n        // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n        availability: AVAILABILITY,\n        device: DEVICE,\n        entity_category: \"diagnostic\",\n        // expire_after: EXPIRE_AFTER, // never expire\n        retain: true,\n        name: msg.payload.deviceId + \" Battery Voltage\",\n        unique_id: msg.payload.deviceId + \"/battery_voltages\",\n        state_topic: STATE_TOPIC,\n        value_template: \"{{ value_json.VOLTAGE }}\",\n        unit_of_measurement: \"V\",\n        device_class: \"voltage\",\n        state_class: \"measurement\"\n    },\n    topic: \"homeassistant/sensor/energeniemqtt_\" + msg.payload.deviceId + \"/battery_voltages/config\"\n};\n\nvar config3 = {\n    payload: {\n        // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n        availability: AVAILABILITY,\n        device: DEVICE,\n        entity_category: \"diagnostic\",\n        // expire_after: EXPIRE_AFTER, // never expire\n        retain: true,\n        name: msg.payload.deviceId + \" Battery Level\",\n        unique_id: msg.payload.deviceId + \"/battery_level\",\n        state_topic: STATE_TOPIC,\n        // (($volt - $low) / ($high - $low)) * 100;\n        value_template: \"{{ (((value_json.VOLTAGE - 2.2) / (3.2 - 2.2)) * 100) | round(0) }}\", // 3.1V nominally with new batteries \n\n        unit_of_measurement: \"%\",\n        device_class: \"battery\",\n        state_class: \"measurement\"\n    },\n    topic: \"homeassistant/sensor/energeniemqtt_\" + msg.payload.deviceId + \"/battery_level/config\"\n};\n\nvar config4 = {\n    payload: {\n        // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n        availability: AVAILABILITY,\n        device: DEVICE,\n        entity_category: \"diagnostic\",\n        // expire_after: EXPIRE_AFTER, // never expire\n        retain: true,\n        name: msg.payload.deviceId + \" Valve Exercised Issues\",\n        unique_id: msg.payload.deviceId + \"/valve_exercised\",\n        state_topic: STATE_TOPIC,\n        value_template: \"{{ value_json.EXERCISE_VALVE }}\",\n        device_class: \"problem\",\n        // state_class: \"measurement\",\n        // icon: \"mdi:flash\",\n        payload_on: \"fail\", //payload format to match JSON from sensor\n        payload_off: \"success\" //payload format to match JSON from sensor\n    },\n    topic: \"homeassistant/binary_sensor/energeniemqtt_\" + msg.payload.deviceId + \"/valve_exercised/config\"\n\n};\n\nvar config5 = {\n    payload: {\n        // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n        availability: AVAILABILITY,\n        device: DEVICE,\n        entity_category: \"diagnostic\",\n        // expire_after: EXPIRE_AFTER, // never expire\n        retain: true,\n        name: msg.payload.deviceId + \" Last Timestamp\",\n        unique_id: msg.payload.deviceId + \"/last_timestamp\",\n        state_topic: STATE_TOPIC,\n        value_template: \"{{ value_json.timestamp | timestamp_local}}\", // Timestamp of last update\n        device_class: \"TIMESTAMP\"\n    },\n    topic: \"homeassistant/sensor/energeniemqtt_\" + msg.payload.deviceId + \"/last_timestamp/config\"\n};\n\nvar config6 = {\n    payload: {\n        // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n        availability: AVAILABILITY,\n        device: DEVICE,\n        entity_category: \"diagnostic\",\n        // expire_after: EXPIRE_AFTER, // never expire\n        retain: true,\n        name: msg.payload.deviceId + \" Voltage Timestamp\",\n        unique_id: msg.payload.deviceId + \"/voltage_timestamp\",\n        state_topic: STATE_TOPIC,\n        value_template: \"{{ value_json.VOLTAGE_TS | timestamp_local}}\", // Timestamp of last voltage update\n        // unit_of_measurement: \"N/A\",\n        device_class: \"timestamp\",\n        // state_class: \"none\"\n    },\n    topic: \"homeassistant/sensor/energeniemqtt_\" + msg.payload.deviceId + \"/voltage_timestamp/config\"\n};\n\nvar config7 = {\n    payload: {\n        // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n        availability: AVAILABILITY,\n        device: DEVICE,\n        // expire_after: EXPIRE_AFTER, // never expire\n        retain: true,\n        name: msg.payload.deviceId + \" Valve Timestamp\",\n        unique_id: msg.payload.deviceId + \"/valve_timestamp\",\n        state_topic: STATE_TOPIC,\n        value_template: \"{{ value_json.VALVE_TS | timestamp_local}}\", // Timestamp of last valve update\n        // unit_of_measurement: \"N/A\",\n        device_class: \"timestamp\",\n        // state_class: \"none\",\n        entity_category: \"diagnostic\"\n    },\n    topic: \"homeassistant/sensor/energeniemqtt_\" + msg.payload.deviceId + \"/valve_timestamp/config\"\n};\n\nvar config8 = {\n    payload: {\n        // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n        availability: AVAILABILITY,\n        device: DEVICE,\n        // expire_after: EXPIRE_AFTER, // never expire\n        retain: true,\n        name: msg.payload.deviceId + \" Diagnostics Timestamp\",\n        unique_id: msg.payload.deviceId + \"/diagnostics_timestamp\",\n        state_topic: STATE_TOPIC,\n        value_template: \"{{ value_json.DIAGNOSTICS_TS | timestamp_local }}\", // Timestamp of last diagnostics update\n        // unit_of_measurement: \"N/A\",\n        device_class: \"timestamp\",\n        // state_class: \"none\",\n        entity_category: \"diagnostic\"\n    },\n    topic: \"homeassistant/sensor/energeniemqtt_\" + msg.payload.deviceId + \"/diagnostics_timestamp/config\"\n};\n\nvar config9 = {\n    payload: {\n        // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n        availability: AVAILABILITY,\n        device: DEVICE,\n        retain: false,\n        name: msg.payload.deviceId + \" Identify\",\n        unique_id: msg.payload.deviceId + \"/identify\",\n        command_topic: \"energenie_gateway/energeniemqtt_\" + msg.payload.deviceId + \"/command\",\n        payload_press: '{\"command\":191}',\n        entity_category: \"config\",\n        icon: \"mdi:home-search\"\n    },\n    topic: \"homeassistant/button/energeniemqtt_\" + msg.payload.deviceId + \"/identify/config\"\n};\n\nvar config10 = {\n    payload: {\n        // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n        availability: AVAILABILITY,\n        device: DEVICE,\n        retain: false,\n        name: msg.payload.deviceId + \" Calibrate\",\n        unique_id: msg.payload.deviceId + \"/calibrate\",\n        command_topic: \"energenie_gateway/energeniemqtt_\" + msg.payload.deviceId + \"/command\",\n        payload_press: '{\"command\":163}',\n        device_class: \"restart\",\n        entity_category: \"config\"\n    },\n    topic: \"homeassistant/button/energeniemqtt_\" + msg.payload.deviceId + \"/calibrate/config\"\n};\n\nvar config11 = {\n    payload: {\n        // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n        availability: AVAILABILITY,\n        device: DEVICE,\n        retain: false,\n        name: msg.payload.deviceId + \" Request Diagnostics\",\n        unique_id: msg.payload.deviceId + \"/request_diagnostics\",\n        command_topic: \"energenie_gateway/energeniemqtt_\" + msg.payload.deviceId + \"/command\",\n        payload_press: '{\"command\":166}',\n        device_class: \"restart\",\n        entity_category: \"config\",\n        icon: \"mdi:doctor\" \n    },\n    topic: \"homeassistant/button/energeniemqtt_\" + msg.payload.deviceId + \"/request_diagnostics/config\"\n};\n\n\nvar config12 = {\n    payload: {\n        // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n        availability: AVAILABILITY,\n        device: DEVICE,\n        retain: false,\n        name: msg.payload.deviceId + \" Request Voltage\",\n        unique_id: msg.payload.deviceId + \"/request_voltage\",\n        command_topic: \"energenie_gateway/energeniemqtt_\" + msg.payload.deviceId + \"/command\",\n        payload_press: '{\"command\":226}',\n        device_class: \"restart\",\n        entity_category: \"config\",\n        icon: \"mdi:flash-triangle\" \n    },\n    topic: \"homeassistant/button/energeniemqtt_\" + msg.payload.deviceId + \"/request_voltage/config\"\n};\n\nvar config13 = {\n    payload: {\n        // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n        availability: AVAILABILITY,\n        device: DEVICE,\n        retain: false,\n        name: msg.payload.deviceId + \" Valve State Controls\",\n        unique_id: msg.payload.deviceId + \"/valve_state_controls\",\n        command_topic: \"energenie_gateway/energeniemqtt_\" + msg.payload.deviceId + \"/command\",\n        // state_topic: STATE_TOPIC, //Cant get this to work\n        // value_template: \"{{ value_json.VALVE_STATE }}\", //Cant get this to work\n        options: [\"Open\", \"Closed\", \"Automatic\"],\n        entity_category: \"config\"\n        // payload_press: '{\"command\":226}',\n        // device_class: \"restart\",\n        // entity_category: \"config\",\n        // icon: \"mdi:flash-triangle\"\n    },\n    topic: \"homeassistant/select/energeniemqtt_\" + msg.payload.deviceId + \"/valve_state_contols/config\"\n};\n\nvar config14 = {\n    payload: {\n        // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n        availability: AVAILABILITY,\n        device: DEVICE,\n        // expire_after: EXPIRE_AFTER, // never expire\n        retain: false,\n        name: msg.payload.deviceId + \" Low Power Mode\",\n        unique_id: msg.payload.deviceId + \"/low_power_mode\",\n        state_topic: STATE_TOPIC,\n        optimistic: false,\n        command_topic: \"energenie_gateway/energeniemqtt_\" + msg.payload.deviceId + \"/command\",\n        value_template: \"{{value_json.LOW_POWER_MODE}}\",\n        device_class: \"switch\",\n        state_on: \"True\", //payload format to match JSON from sensor\n        state_off: \"False\", //payload format to match JSON from sensor\n        payload_on: '{ \"command\":164, \"data\":1 }',\n        payload_off: '{ \"command\":164, \"data\":0 }',\n        entity_category: \"config\",\n        icon: \"mdi:sprout\"\n    },\n    topic: \"homeassistant/switch/energeniemqtt_\" + msg.payload.deviceId + \"/low_power_mode/config\"\n\n};\n\nvar config15 = {\n    payload: {\n        // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n        availability: AVAILABILITY,\n        device: DEVICE,\n        // expire_after: EXPIRE_AFTER, // never expire\n        retain: true,\n        name: msg.payload.deviceId + \" Low Power Mode State\",\n        unique_id: msg.payload.deviceId + \"/low_power_mode_state\",\n        state_topic: STATE_TOPIC,\n        value_template: \"{{ value_json.LOW_POWER_MODE }}\",\n        // device_class: \"problem\",\n        // state_class: \"measurement\",\n        icon: \"mdi:sprout\",\n        entity_category: \"diagnostic\",\n        payload_on: \"True\", //payload format to match JSON from sensor\n        payload_off: \"False\", //payload format to match JSON from sensor\n    },\n    topic: \"homeassistant/binary_sensor/energeniemqtt_\" + msg.payload.deviceId + \"/low_power_mode_state/config\"\n};\n\nvar config16 = {\n    payload: {\n        // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n        availability: AVAILABILITY,\n        device: DEVICE,\n        // expire_after: EXPIRE_AFTER, // never expire\n        retain: true,\n        name: msg.payload.deviceId + \" Errors\",\n        unique_id: msg.payload.deviceId + \"/errors\",\n        state_topic: STATE_TOPIC,\n        value_template: \"{{ value_json.ERRORS }}\",\n        // device_class: \"problem\",\n        // state_class: \"measurement\",\n        // icon: \"mdi:sprout\",\n        entity_category: \"diagnostic\"\n    },\n    topic: \"homeassistant/sensor/energeniemqtt_\" + msg.payload.deviceId + \"/errors/config\"\n};\n\nvar config17 = {\n    payload: {\n        // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n        availability: AVAILABILITY,\n        device: DEVICE,\n        // expire_after: EXPIRE_AFTER, // never expire\n        retain: true,\n        name: msg.payload.deviceId + \" Error Text\",\n        unique_id: msg.payload.deviceId + \"/error_text\",\n        state_topic: STATE_TOPIC,\n        value_template: \"{{ value_json.ERROR_TEXT }}\",\n        entity_category: \"diagnostic\"\n        // payload_press: '{\"command\":226}',\n        // device_class: \"restart\",\n        // entity_category: \"config\",\n        // icon: \"mdi:flash-triangle\"\n    },\n    topic: \"homeassistant/sensor/energeniemqtt_\" + msg.payload.deviceId + \"/error_text/config\"\n};\n\nreturn [config1, config2, config3, config4, config5, config6, config7, config8, config9, config10, config11, config12, config13, config14, config15, config16, config17]; \n\n\n// This one does not work!\n// var config14 = {\n//     payload: {\n//         // availability_mode: \"all\",  // Commented out as we are using only one topic at the moment.\n//         availability: AVAILABILITY,\n//         device: DEVICE,\n//         // expire_after: EXPIRE_AFTER, // never expire\n//         retain: true,\n//         name: msg.payload.deviceId + \" Valve State Info\",\n//         unique_id: msg.payload.deviceId + \"/valve_state_info\",\n//         state_topic: STATE_TOPIC,\n//         value_template: \"{{ value_json.VALVE_STATE }}\",\n//         // unit_of_measurement: \"N/A\",\n//         // device_class: \"none\",\n//         // state_class: \"none\",\n//         entity_category: \"diagnostic\"\n//         // icon: \"mdi:current-dc\"\n//     },\n//     topic: \"homeassistant/sensor/energeniemqtt_\" + msg.payload.deviceId + \"/valve_state_info/config\"\n// };\n\n\n// // Need to get working: https://www.home-assistant.io/integrations/device_trigger.mqtt/\n// var config10 = {\n//     payload: {\n//         // availability_mode: \"all\",\n//         availability: [\n//             {\n//                 topic: \"energenie_gateway/bridge/state\",\n//                 payload_available: \"online\",\n//                 payload_not_available: \"offline\"\n//             }\n//         ],\n//         device: {\n//             name: msg.payload.deviceId,\n//             identifiers: IDENTIFIERS_PREFIX + msg.payload.deviceId,\n//             configuration_url: CONFIGURATION_VAR,\n//             manufacturer: MANUFACTURER_NAME,\n//             model: MODEL_NAME,\n//             via_device: VIA_DEVICE_NAME\n//         },\n// //         // entity_category: \"none\",\n//         // expire_after: EXPIRE_AFTER, // never expire\n//         // retain: false,\n//         // name: msg.payload.deviceId + \" Identify\",\n//         // unique_id: msg.payload.deviceId + \"/identify\",\n//         // state_topic: STATE_TOPIC,\n//         // value_template: \"{{ value_json.EXERCISE_VALVE}}\",\n//         // entity_category: \"config\",\n//         // device_class: \"None\"\n//         // // state_class: \"measurement\",\n//         // // icon: \"mdi:flash\"\n//         automation_type: \n\n\n//     },\n//     topic: \"homeassistant/device_automation/energeniemqtt_\" + msg.payload.deviceId + \"/id_button/config\"\n\n// };",
        "outputs": 17,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 220,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "a7e17306d2058706",
        "type": "delay",
        "z": "cdb62d5ce7ac8e79",
        "name": "",
        "pauseType": "delay",
        "timeout": "600",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 370,
        "y": 440,
        "wires": [
            [
                "8aa18cb79c3162bc"
            ]
        ]
    },
    {
        "id": "4dea4655068f7a7f",
        "type": "debug",
        "z": "cdb62d5ce7ac8e79",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 420,
        "y": 20,
        "wires": []
    },
    {
        "id": "1b26d96dfd7c0a9d",
        "type": "function",
        "z": "cdb62d5ce7ac8e79",
        "name": "Set mode = heat",
        "func": "msg.payload.mode = \"heat\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 120,
        "wires": [
            [
                "4dea4655068f7a7f",
                "a5c081218aa0a38b",
                "a7e17306d2058706"
            ]
        ]
    },
    {
        "id": "8aa18cb79c3162bc",
        "type": "function",
        "z": "cdb62d5ce7ac8e79",
        "name": "Publish to all",
        "func": "msg.topic = \"energenie_gateway/energeniemqtt_\" + msg.payload.deviceId + \"/state\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "28824b357224a926",
        "type": "openThings-monitor",
        "z": "537eb81ac592d6ae",
        "g": "bd6bb52ed4b9535c",
        "name": "",
        "device": "23f31f81a5be8aed",
        "board": "88fbf5a17def056c",
        "x": 1170,
        "y": 900,
        "wires": [
            [
                "09747f10f9a9bea7",
                "301bb66f90af5066"
            ]
        ],
        "outputLabels": [
            "Sensor Data"
        ]
    },
    {
        "id": "37f62acf217785cd",
        "type": "openThings-switch",
        "z": "537eb81ac592d6ae",
        "g": "bd6bb52ed4b9535c",
        "name": "",
        "device": "23f31f81a5be8aed",
        "board": "88fbf5a17def056c",
        "retry": true,
        "x": 1170,
        "y": 960,
        "wires": [
            [
                "09747f10f9a9bea7",
                "301bb66f90af5066"
            ]
        ]
    },
    {
        "id": "dadbe76ae213adcc",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "bd6bb52ed4b9535c",
        "name": "On",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 950,
        "y": 900,
        "wires": [
            [
                "37f62acf217785cd"
            ]
        ]
    },
    {
        "id": "3c57205d2a77b4a0",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "bd6bb52ed4b9535c",
        "name": "Off",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 950,
        "y": 940,
        "wires": [
            [
                "37f62acf217785cd"
            ]
        ]
    },
    {
        "id": "09747f10f9a9bea7",
        "type": "debug",
        "z": "537eb81ac592d6ae",
        "g": "bd6bb52ed4b9535c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1440,
        "y": 900,
        "wires": []
    },
    {
        "id": "38a4b9e675ef9b0f",
        "type": "debug",
        "z": "537eb81ac592d6ae",
        "name": "MQTT IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 860,
        "wires": []
    },
    {
        "id": "e428c81cc49ef126",
        "type": "switch",
        "z": "537eb81ac592d6ae",
        "name": "Select energeniemqtt_xxxx Plug",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "energeniemqtt_5623",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "energeniemqtt_6187",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 960,
        "wires": [
            [
                "37f62acf217785cd"
            ],
            [
                "25d4079da5b20a32"
            ]
        ]
    },
    {
        "id": "295d1acbb4387108",
        "type": "openThings-monitor",
        "z": "537eb81ac592d6ae",
        "g": "466213e5a7838e65",
        "name": "",
        "device": "0f31bc6adcafaa43",
        "board": "88fbf5a17def056c",
        "x": 1170,
        "y": 1100,
        "wires": [
            [
                "dcc750a105f878b9",
                "d67372c17b6b91ee"
            ]
        ],
        "outputLabels": [
            "Sensor Data"
        ]
    },
    {
        "id": "25d4079da5b20a32",
        "type": "openThings-switch",
        "z": "537eb81ac592d6ae",
        "g": "466213e5a7838e65",
        "name": "",
        "device": "0f31bc6adcafaa43",
        "board": "88fbf5a17def056c",
        "retry": true,
        "x": 1170,
        "y": 1160,
        "wires": [
            [
                "dcc750a105f878b9",
                "d67372c17b6b91ee"
            ]
        ]
    },
    {
        "id": "897d41aed130b0e7",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "466213e5a7838e65",
        "name": "On",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 950,
        "y": 1120,
        "wires": [
            [
                "25d4079da5b20a32"
            ]
        ]
    },
    {
        "id": "e9115c9a4480a356",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "466213e5a7838e65",
        "name": "Off",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 950,
        "y": 1160,
        "wires": [
            [
                "25d4079da5b20a32"
            ]
        ]
    },
    {
        "id": "dcc750a105f878b9",
        "type": "debug",
        "z": "537eb81ac592d6ae",
        "g": "466213e5a7838e65",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1440,
        "y": 1100,
        "wires": []
    },
    {
        "id": "3342db22e8247c46",
        "type": "debug",
        "z": "537eb81ac592d6ae",
        "g": "f8842ccda840ba94",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1420,
        "y": 480,
        "wires": []
    },
    {
        "id": "7d073ecada5747d4",
        "type": "subflow:f075697e81a4e38d",
        "z": "537eb81ac592d6ae",
        "g": "8fa61f20ae12509e",
        "name": "",
        "x": 1820,
        "y": 780,
        "wires": [
            [
                "048759ea643eacfb"
            ]
        ]
    },
    {
        "id": "9965ef4959ba011f",
        "type": "subflow:833a40a2676dab42",
        "z": "537eb81ac592d6ae",
        "g": "0282228cd430609b",
        "name": "",
        "x": 1780,
        "y": 380,
        "wires": [
            [
                "9268589db08f7ec3"
            ]
        ]
    },
    {
        "id": "7207a0429a928361",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "name": "https://github.com/genestealer/node-red-energenie-ener314rt-home-assistant-mqtt",
        "info": "",
        "x": 330,
        "y": 20,
        "wires": []
    },
    {
        "id": "a380876d88962b29",
        "type": "switch",
        "z": "537eb81ac592d6ae",
        "g": "fa73fab3d77d8daa",
        "name": "Select energeniemqtt_xxxx eTRV ",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "energeniemqtt_3233",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "energeniemqtt_5251",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "energeniemqtt_5475",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "energeniemqtt_3449",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "energeniemqtt_5318",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 540,
        "y": 1600,
        "wires": [
            [
                "06437078cd06684c"
            ],
            [
                "9f72ca99c409ecf7"
            ],
            [
                "fcfee4cd7f41bc55"
            ],
            [
                "5afbdef9f808b931"
            ],
            [
                "5b273f4574e1e063"
            ]
        ]
    },
    {
        "id": "7d792a741cd70d6c",
        "type": "debug",
        "z": "537eb81ac592d6ae",
        "g": "fa73fab3d77d8daa",
        "name": "MQTT IN",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 1500,
        "wires": []
    },
    {
        "id": "db52f7a86ff3fedd",
        "type": "ook-switch",
        "z": "537eb81ac592d6ae",
        "g": "a5de3889fbc07d90",
        "name": "Double Gang Light: 1:1",
        "zone": "1",
        "switchNum": 1,
        "board": "88fbf5a17def056c",
        "x": 730,
        "y": 2920,
        "wires": [
            []
        ],
        "icon": "node-red-contrib-energenie-ener314rt/LightSwitch.png"
    },
    {
        "id": "f6c3b6f8fa2dd920",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "a5de3889fbc07d90",
        "name": "On",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 430,
        "y": 2880,
        "wires": [
            [
                "db52f7a86ff3fedd"
            ]
        ]
    },
    {
        "id": "80cedc3bf9e60653",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "a5de3889fbc07d90",
        "name": "Off",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 430,
        "y": 2920,
        "wires": [
            [
                "db52f7a86ff3fedd"
            ]
        ]
    },
    {
        "id": "c46934dffc3bcb2d",
        "type": "ook-switch",
        "z": "537eb81ac592d6ae",
        "g": "a5de3889fbc07d90",
        "name": "Double Gang Light: 1:2",
        "zone": "1",
        "switchNum": "2",
        "board": "88fbf5a17def056c",
        "x": 730,
        "y": 3000,
        "wires": [
            []
        ],
        "icon": "node-red-contrib-energenie-ener314rt/LightSwitch.png"
    },
    {
        "id": "db083b5f26996a4c",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "a5de3889fbc07d90",
        "name": "On",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 430,
        "y": 2960,
        "wires": [
            [
                "c46934dffc3bcb2d"
            ]
        ]
    },
    {
        "id": "dad03b1c53fcc63b",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "a5de3889fbc07d90",
        "name": "Off",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 430,
        "y": 3000,
        "wires": [
            [
                "c46934dffc3bcb2d"
            ]
        ]
    },
    {
        "id": "4398775347ed8679",
        "type": "ook-switch",
        "z": "537eb81ac592d6ae",
        "g": "a5de3889fbc07d90",
        "name": "Light: 2:1",
        "zone": "1",
        "switchNum": 1,
        "board": "88fbf5a17def056c",
        "x": 680,
        "y": 3140,
        "wires": [
            []
        ],
        "icon": "node-red-contrib-energenie-ener314rt/LightSwitch.png"
    },
    {
        "id": "9978c67901c1a989",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "a5de3889fbc07d90",
        "name": "On",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 430,
        "y": 3100,
        "wires": [
            [
                "4398775347ed8679"
            ]
        ]
    },
    {
        "id": "bf87fe53c72c7d7e",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "a5de3889fbc07d90",
        "name": "Off",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 430,
        "y": 3140,
        "wires": [
            [
                "4398775347ed8679"
            ]
        ]
    },
    {
        "id": "d989ab87daa5443f",
        "type": "function",
        "z": "537eb81ac592d6ae",
        "g": "a5de3889fbc07d90",
        "name": "Create MQTT discovery messages",
        "func": "var MODEL_NAME = \"Double Gang MiHome Light (MIHO009)\";\nvar SHARED_NAME_PREFIX = \"Energenie \";\n// var IDENTIFIER_NAME_PREFIX = \"Energenie MQTT Gateway\";\nvar IDENTIFIERS_PREFIX = \"energenie_mqtt_gateway_\";\n\n\nvar MANUFACTURER_NAME = \"Energenie (via MQTT Raspberry Pi with ENER314-RT)\";\nvar CONFIGURATION_VAR = \"http://192.168.10.35:1880/\";\nvar VIA_DEVICE_NAME = \"MQTT Raspberry Pi with ENER314-RT\";\nvar UNIQUE_ID_SUFFIX = \"_energenie_mqtt\";\nvar EXPIRE_AFTER = \"60\";\n\nvar config1 = {\n    payload: {\n        // availability_mode: \"all\",\n        availability: [\n            {\n                topic: \"energenie_gateway/bridge/state\",\n                payload_available: \"online\",\n                payload_not_available: \"offline\"\n            }\n        ],\n        device: {\n            name: msg.payload.deviceId,\n            identifiers: IDENTIFIERS_PREFIX + msg.payload.deviceId,\n            configuration_url: CONFIGURATION_VAR,\n            manufacturer: MANUFACTURER_NAME,\n            model: MODEL_NAME,\n            via_device: VIA_DEVICE_NAME\n        },\n        // enabled_by_default: true,\n        // entity_category: \"none\",\n        expire_after: EXPIRE_AFTER,\n        name: msg.payload.deviceId + \" Switch State\",\n        unique_id: msg.payload.deviceId + \"_switch_state\",\n        state_topic: \"homeassistant/binary_sensor/energeniemqtt_\" + msg.payload.deviceId + \"/state\",\n        value_template: \"{{ value_json.SWITCH_STATE }}\",\n        // unit_of_measurement: \"var\",\n        device_class: \"power\",\n        // state_class: \"measurement\",\n        // icon: \"mdi:flash\"\n        payload_on: \"1\", //payload format to match JSON from sensor\n        payload_off: \"0\", //payload format to match JSON from sensor\n    },\n    topic: \"homeassistant/binary_sensor/energeniemqtt_\" + msg.payload.deviceId + \"_reactive_power/config\"\n};\n\nvar config2 = {\n    payload: {\n        // availability_mode: \"all\",\n        availability: [\n            {\n                topic: \"energenie_gateway/bridge/state\",\n                payload_available: \"online\",\n                payload_not_available: \"offline\"\n            }\n        ],\n        device: {\n            name: msg.payload.deviceId,\n            identifiers: IDENTIFIERS_PREFIX + msg.payload.deviceId,\n            configuration_url: CONFIGURATION_VAR,\n            manufacturer: MANUFACTURER_NAME,\n            model: MODEL_NAME,\n            via_device: VIA_DEVICE_NAME\n        },\n        // enabled_by_default: true,\n        // entity_category: \"none\",\n        expire_after: EXPIRE_AFTER,\n        name: msg.payload.deviceId + \" Switch\",\n        unique_id: msg.payload.deviceId + \"_switch_set\",\n        // state_topic: \"homeassistant/switch/energeniemqtt_\" + msg.payload.deviceId + \"/state\",\n        state_topic: \"homeassistant/binary_sensor/energeniemqtt_\" + msg.payload.deviceId + \"/state\", // Track the state of the sensor value.\n        value_template: \"{{ value_json.SWITCH_STATE }}\",\n        // unit_of_measurement: \"var\",\n        device_class: \"outlet\",\n        // state_class: \"measurement\",\n        // icon: \"mdi:flash\"\n        payload_on: \"true\", // Values to be sent to Node-RED via MQTT\n        payload_off: \"false\", // Values to be sent to Node-RED via MQTT\n        state_on: \"1\", // Values exspected be sent from Node-RED via MQTT (payload format to match JSON from sensor)\n        state_off: \"0\", // Values exspected be sent from Node-RED via MQTT (payload format to match JSON from sensor)\n        command_topic: \"homeassistant/switch/energeniemqtt_\" + msg.payload.deviceId + \"/set\", // Commands topic to be actioned on by Node-RED\n    },\n    topic: \"homeassistant/switch/energeniemqtt_\" + msg.payload.deviceId + \"_switch_set/config\"\n};\n\n\nreturn [config1, config2];",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 2920,
        "wires": [
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "e0f4df05ab1bef7e",
        "type": "function",
        "z": "537eb81ac592d6ae",
        "g": "a5de3889fbc07d90",
        "name": "Publish to sensor",
        "func": "msg.topic = \"homeassistant/sensor/energeniemqtt_\" + msg.payload.deviceId + \"/state\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 3040,
        "wires": [
            []
        ]
    },
    {
        "id": "1f14589732fae5c6",
        "type": "function",
        "z": "537eb81ac592d6ae",
        "g": "a5de3889fbc07d90",
        "name": "Publish to binary_sensor",
        "func": "msg.topic = \"homeassistant/binary_sensor/energeniemqtt_\" + msg.payload.deviceId + \"/state\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 3000,
        "wires": [
            []
        ]
    },
    {
        "id": "3b7b181075c1ef3b",
        "type": "function",
        "z": "537eb81ac592d6ae",
        "g": "a5de3889fbc07d90",
        "name": "Publish to switch",
        "func": "msg.topic = \"homeassistant/switch/energeniemqtt_\" + msg.payload.deviceId + \"/state\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 3080,
        "wires": [
            []
        ]
    },
    {
        "id": "609e085f01975b46",
        "type": "delay",
        "z": "537eb81ac592d6ae",
        "g": "a5de3889fbc07d90",
        "name": "",
        "pauseType": "delay",
        "timeout": "600",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1210,
        "y": 3000,
        "wires": [
            [
                "1f14589732fae5c6",
                "6e774504ac1563d2"
            ]
        ]
    },
    {
        "id": "c5a79ac44753842f",
        "type": "delay",
        "z": "537eb81ac592d6ae",
        "g": "a5de3889fbc07d90",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1210,
        "y": 2920,
        "wires": [
            [
                "d989ab87daa5443f",
                "609e085f01975b46"
            ]
        ]
    },
    {
        "id": "6e774504ac1563d2",
        "type": "delay",
        "z": "537eb81ac592d6ae",
        "g": "a5de3889fbc07d90",
        "name": "",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1210,
        "y": 3040,
        "wires": [
            [
                "e0f4df05ab1bef7e",
                "f0d71363803e24f8"
            ]
        ]
    },
    {
        "id": "f0d71363803e24f8",
        "type": "delay",
        "z": "537eb81ac592d6ae",
        "g": "a5de3889fbc07d90",
        "name": "",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1210,
        "y": 3080,
        "wires": [
            [
                "3b7b181075c1ef3b"
            ]
        ]
    },
    {
        "id": "9268589db08f7ec3",
        "type": "mqtt out",
        "z": "537eb81ac592d6ae",
        "g": "0282228cd430609b",
        "name": "Publish MQTT Messages",
        "topic": "",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8d7ee635c95c5781",
        "x": 2050,
        "y": 380,
        "wires": []
    },
    {
        "id": "4d961fde847699bb",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "5112edb8c4151763",
        "name": "Smart Monitor Plug (MIHO004)",
        "info": "",
        "x": 190,
        "y": 280,
        "wires": []
    },
    {
        "id": "6766125a6911b82f",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "ea176ac851386d6e",
        "name": " Smart Plug+ (MIHO005)",
        "info": "",
        "x": 170,
        "y": 680,
        "wires": []
    },
    {
        "id": "26a4d478f240fd15",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "2e76e37671a934e0",
        "name": "Smart Radiator Valve (MIHO013)",
        "info": "",
        "x": 190,
        "y": 1340,
        "wires": []
    },
    {
        "id": "edea18ceaf6e05c2",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "a5de3889fbc07d90",
        "name": "Double Gang MiHome Light (MIHO009)",
        "info": "",
        "x": 270,
        "y": 2780,
        "wires": []
    },
    {
        "id": "f267fd6bda3b9403",
        "type": "change",
        "z": "537eb81ac592d6ae",
        "name": "Reformat: String to Boolen",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 960,
        "wires": [
            [
                "e428c81cc49ef126"
            ]
        ]
    },
    {
        "id": "0e63b171b14873f1",
        "type": "mqtt out",
        "z": "537eb81ac592d6ae",
        "g": "018e61fa1f56ee1e",
        "name": "Publish MQTT Messages",
        "topic": "",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8d7ee635c95c5781",
        "x": 2150,
        "y": 1420,
        "wires": []
    },
    {
        "id": "048759ea643eacfb",
        "type": "mqtt out",
        "z": "537eb81ac592d6ae",
        "g": "8fa61f20ae12509e",
        "name": "Publish MQTT Messages",
        "topic": "",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8d7ee635c95c5781",
        "x": 2110,
        "y": 780,
        "wires": []
    },
    {
        "id": "4b2487e2e7cfa0a2",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "2e76e37671a934e0",
        "name": "Note: There is a 5 min delay before the TRV will get the message ",
        "info": "",
        "x": 590,
        "y": 1340,
        "wires": []
    },
    {
        "id": "43b3bf1c0f3c6a18",
        "type": "mqtt in",
        "z": "537eb81ac592d6ae",
        "g": "fa73fab3d77d8daa",
        "name": "",
        "topic": "energenie_gateway/+/command",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "8d7ee635c95c5781",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 1500,
        "wires": [
            [
                "7d792a741cd70d6c",
                "c533a8bb7273e019"
            ]
        ]
    },
    {
        "id": "09303e100d6c84bb",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "045aef6db868e9d5",
        "name": "Demo Data 3294",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"deviceId\":3934,\"mfrId\":4,\"productId\":3,\"timestamp\":1659455555,\"TEMPERATURE\":30,\"TARGET_C\":10,\"VOLTAGE\":2,\"VOLTAGE_TS\":1659455166,\"DIAGNOSTICS\":0,\"DIAGNOSTICS_TS\":1659453625,\"LOW_POWER_MODE\":false}",
        "payloadType": "json",
        "x": 1800,
        "y": 2280,
        "wires": [
            [
                "18636c74da0dfe6e"
            ]
        ]
    },
    {
        "id": "18636c74da0dfe6e",
        "type": "subflow:cdb62d5ce7ac8e79",
        "z": "537eb81ac592d6ae",
        "g": "018e61fa1f56ee1e",
        "name": "",
        "x": 1730,
        "y": 1420,
        "wires": [
            [
                "7d800d7548111c58"
            ]
        ]
    },
    {
        "id": "f155d23535a2e226",
        "type": "debug",
        "z": "537eb81ac592d6ae",
        "g": "0dc7ef642e108ea2",
        "name": "1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 1540,
        "wires": []
    },
    {
        "id": "29a81328d008fb5e",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "045aef6db868e9d5",
        "name": "Set Temp {\"command\":244,\"data\":29}",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"command\":244,\"data\":29}",
        "payloadType": "json",
        "x": 1870,
        "y": 2060,
        "wires": [
            [
                "f4c005a8c68ef5b1"
            ]
        ]
    },
    {
        "id": "11343262e93d1cf7",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "045aef6db868e9d5",
        "name": "REQUEST_DIAGNOTICS",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"command\":166}",
        "payloadType": "json",
        "x": 1830,
        "y": 1680,
        "wires": [
            [
                "f4c005a8c68ef5b1"
            ]
        ]
    },
    {
        "id": "01a73f4f44b838f8",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "045aef6db868e9d5",
        "name": "EXERCISE_VALVE",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"command\":163}",
        "payloadType": "json",
        "x": 1810,
        "y": 1780,
        "wires": [
            [
                "f4c005a8c68ef5b1"
            ]
        ]
    },
    {
        "id": "c4e7618d0c8de6d4",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "045aef6db868e9d5",
        "name": "SET_VALVE_STATE Open",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"command\":165,\"data\":0}",
        "payloadType": "json",
        "x": 1830,
        "y": 1840,
        "wires": [
            [
                "f4c005a8c68ef5b1"
            ]
        ]
    },
    {
        "id": "9aa0bd5c8e0df7d8",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "045aef6db868e9d5",
        "name": "SET_VALVE_STATE Closed",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"command\":165,\"data\":1}",
        "payloadType": "json",
        "x": 1840,
        "y": 1880,
        "wires": [
            [
                "f4c005a8c68ef5b1"
            ]
        ]
    },
    {
        "id": "bbd9c96a9241fa71",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "045aef6db868e9d5",
        "name": "SET_VALVE_STATE Auto (default)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"command\":165,\"data\":2}",
        "payloadType": "json",
        "x": 1860,
        "y": 1920,
        "wires": [
            [
                "f4c005a8c68ef5b1"
            ]
        ]
    },
    {
        "id": "c44615c857eeef7d",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "045aef6db868e9d5",
        "name": "IDENTIFY",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"command\":191}",
        "payloadType": "json",
        "x": 1780,
        "y": 1640,
        "wires": [
            [
                "f4c005a8c68ef5b1"
            ]
        ]
    },
    {
        "id": "f10e0c7ad4c4a76e",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "045aef6db868e9d5",
        "name": "SET_REPORTING_INTERVAL 300-3600 seconds (default 300)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"command\":210,\"data\":300}",
        "payloadType": "json",
        "x": 1950,
        "y": 2000,
        "wires": [
            [
                "f4c005a8c68ef5b1"
            ]
        ]
    },
    {
        "id": "4d3ec33dddf3365a",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "045aef6db868e9d5",
        "name": "REQUEST_VOLTAGE",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"command\":226}",
        "payloadType": "json",
        "x": 1820,
        "y": 1720,
        "wires": [
            [
                "f4c005a8c68ef5b1"
            ]
        ]
    },
    {
        "id": "c0ea2d7fca78a8d4",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "045aef6db868e9d5",
        "name": "SET_LOW_POWER_MODE On",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"command\":164,\"data\":1}",
        "payloadType": "json",
        "x": 1850,
        "y": 2180,
        "wires": [
            [
                "f4c005a8c68ef5b1"
            ]
        ]
    },
    {
        "id": "180ee6c43e1db209",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "045aef6db868e9d5",
        "name": "SET_LOW_POWER_MODE Off (default)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"command\":164,\"data\":0}",
        "payloadType": "json",
        "x": 1880,
        "y": 2220,
        "wires": [
            [
                "f4c005a8c68ef5b1"
            ]
        ]
    },
    {
        "id": "743f673c2f069661",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "0dc7ef642e108ea2",
        "name": "3233",
        "info": "",
        "x": 970,
        "y": 1500,
        "wires": []
    },
    {
        "id": "af2647e2212948a2",
        "type": "debug",
        "z": "537eb81ac592d6ae",
        "g": "4c7c516e623f61fe",
        "name": "2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 1740,
        "wires": []
    },
    {
        "id": "d12d0a2c61623d10",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "4c7c516e623f61fe",
        "name": "5251",
        "info": "",
        "x": 970,
        "y": 1700,
        "wires": []
    },
    {
        "id": "304a47a02d63c225",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "4c7c516e623f61fe",
        "name": "Demo Data",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"deviceId\":5251,\"mfrId\":4,\"productId\":3,\"timestamp\":1673047147,\"TEMPERATURE\":21.3,\"command\":166,\"retries\":9,\"TARGET_C\":24,\"VOLTAGE\":2.64,\"VOLTAGE_TS\":1673035499,\"EXERCISE_VALVE\":\"success\",\"VALVE_TS\":1673031994,\"DIAGNOSTICS\":0,\"DIAGNOSTICS_TS\":1673045930,\"LOW_POWER_MODE\":false}",
        "payloadType": "json",
        "x": 1010,
        "y": 1800,
        "wires": [
            [
                "45f505abf6949496"
            ]
        ]
    },
    {
        "id": "5bd487d809b900e4",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "0dc7ef642e108ea2",
        "name": "Demo Data",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"deviceId\":3233,\"mfrId\":4,\"productId\":3,\"timestamp\":1673047147,\"TEMPERATURE\":21.3,\"command\":166,\"retries\":9,\"TARGET_C\":24,\"VOLTAGE\":2.64,\"VOLTAGE_TS\":1673035499,\"EXERCISE_VALVE\":\"success\",\"VALVE_TS\":1673031994,\"DIAGNOSTICS\":0,\"DIAGNOSTICS_TS\":1673045930,\"LOW_POWER_MODE\":false}",
        "payloadType": "json",
        "x": 1010,
        "y": 1600,
        "wires": [
            [
                "f97e4fd104d66acc"
            ]
        ]
    },
    {
        "id": "f29f7f8628a8fa6e",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "045aef6db868e9d5",
        "name": "",
        "info": "Temp chnage data\n{\"deviceId\":3233,\"mfrId\":4,\"productId\":3,\"timestamp\":1673036408,\"TEMPERATURE\":21.4,\"command\":244,\"retries\":9,\"TARGET_C\":25,\"VOLTAGE\":2.64,\"VOLTAGE_TS\":1673035499,\"EXERCISE_VALVE\":\"success\",\"VALVE_TS\":1673031994,\"DIAGNOSTICS\":512,\"DIAGNOSTICS_TS\":1673031994,\"LOW_POWER_MODE\":false}\n\n\nroutine data\n{\"deviceId\":5251,\"mfrId\":4,\"productId\":3,\"timestamp\":1673036122,\"TEMPERATURE\":22.8,\"command\":191,\"retries\":6,\"TARGET_C\":29,\"VOLTAGE\":2.83,\"VOLTAGE_TS\":1672965826}",
        "x": 2140,
        "y": 2180,
        "wires": []
    },
    {
        "id": "c533a8bb7273e019",
        "type": "change",
        "z": "537eb81ac592d6ae",
        "g": "fa73fab3d77d8daa",
        "name": "Reformat Valve State Control",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Open",
                "fromt": "str",
                "to": "{ \"command\":165, \"data\":0 }",
                "tot": "json"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Closed",
                "fromt": "str",
                "to": "{ \"command\":165, \"data\":1 }",
                "tot": "json"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Automatic",
                "fromt": "str",
                "to": "{ \"command\":165, \"data\":2 }",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 1600,
        "wires": [
            [
                "a380876d88962b29"
            ]
        ]
    },
    {
        "id": "c9e8d0cc68ce9bf2",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "045aef6db868e9d5",
        "name": "error messages",
        "info": "https://github.com/Achronite/node-red-contrib-energenie-ener314rt/blob/eb31e1ebfa30ae120de5ebe6d3e8b93f8ae775ab/C/achronite/openThings.c\n\n           case 0x74: // TEMPERATURE\n                        // Seems that TEMPERATURE (0x74) received as type OTR_INT=1, and it should be OTR_FLOAT=2 from the eTRV, so override and return a float instead\n                        sprintf(OTrecord, \",\\\"%s\\\":%.1f\", OTrecs[i].paramName, OTrecs[i].retFloat);\n                        break;\n                    case 0x26: // eTRV DIAGNOSTICS, sent as binary\n                        // adapted from gpbenton MQTT code\n                        if (OTrecs[i].retInt != 0){\n                            // at least 1 flag is set\n                            if (OTrecs[i].retInt & 0x0001) sprintf(OTrecord,\",\\\"Message\\\":\\\"Motor current below expectation\\\"\");\n                            if (OTrecs[i].retInt & 0x0002) sprintf(OTrecord,\",\\\"Message\\\":\\\"Motor current always high\");\n                            if (OTrecs[i].retInt & 0x0004) sprintf(OTrecord,\",\\\"Message\\\":\\\"Motor taking too long\");\n                            if (OTrecs[i].retInt & 0x0008) sprintf(OTrecord,\",\\\"Message\\\":\\\"Discrepancy between air and pipe sensors\");\n                            if (OTrecs[i].retInt & 0x0010) sprintf(OTrecord,\",\\\"Message\\\":\\\"Air sensor out of expected range\");\n                            if (OTrecs[i].retInt & 0x0020) sprintf(OTrecord,\",\\\"Message\\\":\\\"Pipe sensor out of expected range\");\n                            if (OTrecs[i].retInt & 0x0040) sprintf(OTrecord,\",\\\"Message\\\":\\\"Low power mode is enabled\");\n                            if (OTrecs[i].retInt & 0x0080) sprintf(OTrecord,\",\\\"Message\\\":\\\"No target temperature has been set by host\");\n                            if (OTrecs[i].retInt & 0x0100) sprintf(OTrecord,\",\\\"Message\\\":\\\"Valve may be sticking\");\n                            if (OTrecs[i].retInt & 0x0200) sprintf(OTrecord,\",\\\"Message\\\":\\\"Valve exercise was successful\");\n                            if (OTrecs[i].retInt & 0x0400) sprintf(OTrecord,\",\\\"Message\\\":\\\"Valve exercise was unsuccessful\");\n                            if (OTrecs[i].retInt & 0x0800) sprintf(OTrecord,\",\\\"Message\\\":\\\"Driver micro has suffered a watchdog reset and needs data refresh\");\n                            if (OTrecs[i].retInt & 0x1000) sprintf(OTrecord,\",\\\"Message\\\":\\\"Driver micro has suffered a noise reset and needs data refresh\");\n                            if (OTrecs[i].retInt & 0x2000) sprintf(OTrecord,\",\\\"Message\\\":\\\"Battery voltage has fallen below 2p2V and valve has been opened\");\n                            if (OTrecs[i].retInt & 0x4000) sprintf(OTrecord,\",\\\"Message\\\":\\\"Request for heat messaging is enabled\");\n                            if (OTrecs[i].retInt & 0x8000) sprintf(OTrecord,\",\\\"Message\\\":\\\"Request for heat\");",
        "x": 2120,
        "y": 2220,
        "wires": []
    },
    {
        "id": "1e380b75b8d61790",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "bd6bb52ed4b9535c",
        "name": "5623",
        "info": "",
        "x": 1130,
        "y": 860,
        "wires": []
    },
    {
        "id": "f4fedc380d1a6661",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "466213e5a7838e65",
        "name": "6187",
        "info": "",
        "x": 1130,
        "y": 1060,
        "wires": []
    },
    {
        "id": "e3cf621895e62eef",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "616d9522544dbdb6",
        "name": "Action",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "aa286eb049368e95"
            ]
        ]
    },
    {
        "id": "e0b4a5ede84fec43",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "616d9522544dbdb6",
        "name": "Action",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "eb64c277ce27959b"
            ]
        ]
    },
    {
        "id": "aa286eb049368e95",
        "type": "shutdown",
        "z": "537eb81ac592d6ae",
        "g": "616d9522544dbdb6",
        "name": "",
        "x": 340,
        "y": 140,
        "wires": []
    },
    {
        "id": "eb64c277ce27959b",
        "type": "restart",
        "z": "537eb81ac592d6ae",
        "g": "616d9522544dbdb6",
        "name": "",
        "x": 350,
        "y": 180,
        "wires": []
    },
    {
        "id": "3ba2b2ec9a663b9e",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "616d9522544dbdb6",
        "name": "Pi Power Control",
        "info": "",
        "x": 140,
        "y": 100,
        "wires": []
    },
    {
        "id": "3d449a6477c1b641",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "f8842ccda840ba94",
        "name": "1215",
        "info": "Comment only for visual help",
        "x": 1110,
        "y": 440,
        "wires": []
    },
    {
        "id": "a26075197f86515e",
        "type": "openThings-monitor",
        "z": "537eb81ac592d6ae",
        "g": "f8842ccda840ba94",
        "name": "",
        "device": "2c19ae9da8c2824c",
        "board": "88fbf5a17def056c",
        "x": 1150,
        "y": 480,
        "wires": [
            [
                "3342db22e8247c46",
                "9965ef4959ba011f"
            ]
        ],
        "outputLabels": [
            "Sensor Data"
        ]
    },
    {
        "id": "27552c1876ecace0",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "536976be74a81a6f",
        "name": "USER EDIT: Device IDs for Monitor Plugs",
        "info": "",
        "x": 1020,
        "y": 740,
        "wires": []
    },
    {
        "id": "b95a1eb9606feb70",
        "type": "mqtt in",
        "z": "537eb81ac592d6ae",
        "name": "",
        "topic": "energenie_gateway/+/set",
        "qos": "2",
        "datatype": "auto",
        "broker": "8d7ee635c95c5781",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 860,
        "wires": [
            [
                "38a4b9e675ef9b0f",
                "f267fd6bda3b9403"
            ]
        ]
    },
    {
        "id": "0d7a52e255cdf2d7",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "name": "Incoming MQTT \"SET\" messages",
        "info": "",
        "x": 250,
        "y": 820,
        "wires": []
    },
    {
        "id": "37b551c687aeb197",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "f8842ccda840ba94",
        "name": "Duplicate and edit this group, one group for each plug",
        "info": "",
        "x": 1080,
        "y": 400,
        "wires": []
    },
    {
        "id": "aff329637c1b5419",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "b7595623148c9478",
        "name": "USER EDIT: Edit switch node and add new as needed",
        "info": "",
        "x": 560,
        "y": 760,
        "wires": []
    },
    {
        "id": "8d8ca8ae66d9e016",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "name": "This changes the \"true/false\" string to boolean",
        "info": " Incoming data from MQTT is passed through a change node to change the \"false\" string to boolean formats prior to be passed to the openThings switch node.",
        "x": 310,
        "y": 920,
        "wires": []
    },
    {
        "id": "53a09c1b2e26371d",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "ea176ac851386d6e",
        "name": "Switch select Plug",
        "info": "",
        "x": 610,
        "y": 920,
        "wires": []
    },
    {
        "id": "9c574dedaae3266e",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "536976be74a81a6f",
        "name": "Duplicate and edit the groups, one group for each plug",
        "info": "",
        "x": 1060,
        "y": 780,
        "wires": []
    },
    {
        "id": "5ed8cbfcd963922f",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "8fa61f20ae12509e",
        "name": "USER EDIT: Rasberry Pi IP in Sub-Flow",
        "info": "",
        "x": 1830,
        "y": 740,
        "wires": []
    },
    {
        "id": "5afc17fcd76d53d5",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "0282228cd430609b",
        "name": "USER EDIT: Rasberry Pi IP in Sub-Flow",
        "info": "",
        "x": 1810,
        "y": 340,
        "wires": []
    },
    {
        "id": "66a0ca5aeaaee7fd",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "497782fb8bf28a5e",
        "name": "USER EDIT: Edit/Add device IDs for Monitor Plugs",
        "info": "",
        "x": 1050,
        "y": 340,
        "wires": []
    },
    {
        "id": "16340f7714e67b65",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "fa73fab3d77d8daa",
        "name": "USER EDIT: Edit switch node and add new as needed",
        "info": "",
        "x": 560,
        "y": 1420,
        "wires": []
    },
    {
        "id": "7f6f8e312914436c",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "fa73fab3d77d8daa",
        "name": "USER EDIT: MQTT gateway",
        "info": "",
        "x": 220,
        "y": 1420,
        "wires": []
    },
    {
        "id": "39e666ee8d7e9ca7",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "fa73fab3d77d8daa",
        "name": "Incoming MQTT \"COMMAND\" messages",
        "info": "",
        "x": 260,
        "y": 1460,
        "wires": []
    },
    {
        "id": "cc454d1be9e24b72",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "fa73fab3d77d8daa",
        "name": "Switch select eTRV",
        "info": "",
        "x": 590,
        "y": 1540,
        "wires": []
    },
    {
        "id": "99f6dd3e81add433",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "2e76e37671a934e0",
        "name": "USER EDIT: Device IDs for eTRVs",
        "info": "",
        "x": 1020,
        "y": 1380,
        "wires": []
    },
    {
        "id": "5c343eb4cc9668f0",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "2e76e37671a934e0",
        "name": "Duplicate and edit the groups, one group for each eTRV",
        "info": "",
        "x": 1080,
        "y": 1420,
        "wires": []
    },
    {
        "id": "943e1064f510b2a4",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "045aef6db868e9d5",
        "name": "Debug eTRV commands",
        "info": "",
        "x": 1810,
        "y": 1600,
        "wires": []
    },
    {
        "id": "241e684d32ce5b64",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "018e61fa1f56ee1e",
        "name": "USER EDIT: Rasberry Pi IP in Sub-Flow",
        "info": "",
        "x": 1770,
        "y": 1380,
        "wires": []
    },
    {
        "id": "f9b9be4b9e1cf0bc",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "b7595623148c9478",
        "name": "USER EDIT: MQTT gateway",
        "info": "",
        "x": 220,
        "y": 760,
        "wires": []
    },
    {
        "id": "89732ff349aee7b8",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "a5de3889fbc07d90",
        "name": "Incomplete",
        "info": "",
        "x": 580,
        "y": 2780,
        "wires": []
    },
    {
        "id": "3a38af998a677577",
        "type": "debug",
        "z": "537eb81ac592d6ae",
        "g": "b43999f1833a7f6c",
        "name": "4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 2140,
        "wires": []
    },
    {
        "id": "cf0cef5a7e10d03b",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "b43999f1833a7f6c",
        "name": "3449",
        "info": "",
        "x": 970,
        "y": 2100,
        "wires": []
    },
    {
        "id": "99369410a3413987",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "b43999f1833a7f6c",
        "name": "Demo Data",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"deviceId\":3449,\"mfrId\":4,\"productId\":3,\"timestamp\":1673047147,\"TEMPERATURE\":21.3,\"command\":166,\"retries\":9,\"TARGET_C\":24,\"VOLTAGE\":2.64,\"VOLTAGE_TS\":1673035499,\"EXERCISE_VALVE\":\"success\",\"VALVE_TS\":1673031994,\"DIAGNOSTICS\":0,\"DIAGNOSTICS_TS\":1673045930,\"LOW_POWER_MODE\":false}",
        "payloadType": "json",
        "x": 1010,
        "y": 2220,
        "wires": [
            [
                "255f879cc51130b6"
            ]
        ]
    },
    {
        "id": "0e30c1199ff35990",
        "type": "debug",
        "z": "537eb81ac592d6ae",
        "g": "b866644ff66cac75",
        "name": "5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 2360,
        "wires": []
    },
    {
        "id": "4d842b8a2d4605ef",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "b866644ff66cac75",
        "name": "5318",
        "info": "",
        "x": 970,
        "y": 2320,
        "wires": []
    },
    {
        "id": "1d83c83e1aefc0e2",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "b866644ff66cac75",
        "name": "Demo Data",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"deviceId\":5318,\"mfrId\":4,\"productId\":3,\"timestamp\":1673047147,\"TEMPERATURE\":21.3,\"command\":166,\"retries\":9,\"TARGET_C\":24,\"VOLTAGE\":2.64,\"VOLTAGE_TS\":1673035499,\"EXERCISE_VALVE\":\"success\",\"VALVE_TS\":1673031994,\"DIAGNOSTICS\":0,\"DIAGNOSTICS_TS\":1673045930,\"LOW_POWER_MODE\":false}",
        "payloadType": "json",
        "x": 1010,
        "y": 2440,
        "wires": [
            [
                "dda63ccf41a87347"
            ]
        ]
    },
    {
        "id": "5d2f69626b6683da",
        "type": "debug",
        "z": "537eb81ac592d6ae",
        "g": "11520a859a0fedeb",
        "name": "3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 1940,
        "wires": []
    },
    {
        "id": "50613d7a774d7f3e",
        "type": "comment",
        "z": "537eb81ac592d6ae",
        "g": "11520a859a0fedeb",
        "name": "5475",
        "info": "",
        "x": 970,
        "y": 1900,
        "wires": []
    },
    {
        "id": "ad6c980ebe98dd3c",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "11520a859a0fedeb",
        "name": "Demo Data",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"deviceId\":5475,\"mfrId\":4,\"productId\":3,\"timestamp\":1673047147,\"TEMPERATURE\":21.3,\"command\":166,\"retries\":9,\"TARGET_C\":24,\"VOLTAGE\":2.64,\"VOLTAGE_TS\":1673035499,\"EXERCISE_VALVE\":\"success\",\"VALVE_TS\":1673031994,\"DIAGNOSTICS\":0,\"DIAGNOSTICS_TS\":1673045930,\"LOW_POWER_MODE\":false}",
        "payloadType": "json",
        "x": 1010,
        "y": 2000,
        "wires": [
            [
                "04f1e09fc050dd94"
            ]
        ]
    },
    {
        "id": "06437078cd06684c",
        "type": "openThings-trv",
        "z": "537eb81ac592d6ae",
        "g": "0dc7ef642e108ea2",
        "name": "eTRV",
        "device": "71e70e5d03cfbecf",
        "board": "88fbf5a17def056c",
        "x": 1050,
        "y": 1540,
        "wires": [
            [
                "f97e4fd104d66acc",
                "f155d23535a2e226"
            ]
        ]
    },
    {
        "id": "9f72ca99c409ecf7",
        "type": "openThings-trv",
        "z": "537eb81ac592d6ae",
        "g": "4c7c516e623f61fe",
        "name": "eTRV",
        "device": "4d9cd9aa20ea4eeb",
        "board": "88fbf5a17def056c",
        "x": 1070,
        "y": 1740,
        "wires": [
            [
                "45f505abf6949496",
                "af2647e2212948a2"
            ]
        ]
    },
    {
        "id": "fcfee4cd7f41bc55",
        "type": "openThings-trv",
        "z": "537eb81ac592d6ae",
        "g": "11520a859a0fedeb",
        "name": "eTRV",
        "device": "cf09eae887391bc1",
        "board": "88fbf5a17def056c",
        "x": 1070,
        "y": 1940,
        "wires": [
            [
                "04f1e09fc050dd94",
                "5d2f69626b6683da"
            ]
        ]
    },
    {
        "id": "5afbdef9f808b931",
        "type": "openThings-trv",
        "z": "537eb81ac592d6ae",
        "g": "b43999f1833a7f6c",
        "name": "eTRV",
        "device": "a438a26cd10184b3",
        "board": "88fbf5a17def056c",
        "x": 1050,
        "y": 2160,
        "wires": [
            [
                "3a38af998a677577",
                "255f879cc51130b6"
            ]
        ]
    },
    {
        "id": "5b273f4574e1e063",
        "type": "openThings-trv",
        "z": "537eb81ac592d6ae",
        "g": "b866644ff66cac75",
        "name": "eTRV",
        "device": "cc25050701e608f8",
        "board": "88fbf5a17def056c",
        "x": 1050,
        "y": 2380,
        "wires": [
            [
                "0e30c1199ff35990",
                "dda63ccf41a87347"
            ]
        ]
    },
    {
        "id": "22f516cfc8a864eb",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "045aef6db868e9d5",
        "name": "Set Temp {\"command\":244,\"data\":10}",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"command\":244,\"data\":10}",
        "payloadType": "json",
        "x": 1870,
        "y": 2100,
        "wires": [
            [
                "f4c005a8c68ef5b1"
            ]
        ]
    },
    {
        "id": "787bc97aae81112e",
        "type": "inject",
        "z": "537eb81ac592d6ae",
        "g": "0dc7ef642e108ea2",
        "name": "Demo Data",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"deviceId\":3233,\"mfrId\":4,\"productId\":3,\"timestamp\":1673047147,\"TEMPERATURE\":21.3,\"command\":166,\"retries\":9,\"TARGET_C\":24,\"VOLTAGE\":2.64,\"VOLTAGE_TS\":1673035499,\"EXERCISE_VALVE\":\"success\",\"VALVE_TS\":1673031994,\"DIAGNOSTICS\":0,\"DIAGNOSTICS_TS\":1673045930,\"LOW_POWER_MODE\":true}",
        "payloadType": "json",
        "x": 1190,
        "y": 1620,
        "wires": [
            [
                "f97e4fd104d66acc"
            ]
        ]
    }
]